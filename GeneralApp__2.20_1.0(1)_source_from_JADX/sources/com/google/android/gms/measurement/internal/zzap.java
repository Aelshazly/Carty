package com.google.android.gms.measurement.internal;

import android.content.Context;
import com.google.android.gms.internal.measurement.zzbx;
import com.google.android.gms.internal.measurement.zzcm;
import com.google.android.gms.internal.measurement.zzji;
import com.loopj.android.http.AsyncHttpClient;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import p008cz.msebera.android.httpclient.HttpStatus;

/* compiled from: com.google.android.gms:play-services-measurement-impl@@17.3.0 */
public final class zzap {
    public static zzfc<Long> zza;
    public static zzfc<Long> zzaa;
    public static zzfc<Integer> zzab;
    public static zzfc<Long> zzac;
    public static zzfc<Integer> zzad;
    public static zzfc<Integer> zzae;
    public static zzfc<Integer> zzaf;
    public static zzfc<Integer> zzag;
    public static zzfc<Integer> zzah;
    public static zzfc<Long> zzai;
    public static zzfc<Boolean> zzaj;
    public static zzfc<String> zzak;
    public static zzfc<Long> zzal;
    public static zzfc<Integer> zzam;
    public static zzfc<Double> zzan;
    public static zzfc<Integer> zzao;
    public static zzfc<Integer> zzap;
    public static zzfc<Boolean> zzaq;
    public static zzfc<Boolean> zzar;
    public static zzfc<Boolean> zzas;
    public static zzfc<Boolean> zzat;
    public static zzfc<Boolean> zzau;
    public static zzfc<Boolean> zzav;
    public static zzfc<Boolean> zzaw;
    public static zzfc<Boolean> zzax;
    public static zzfc<Boolean> zzay;
    public static zzfc<Boolean> zzaz;
    public static zzfc<Long> zzb;
    public static zzfc<Boolean> zzba;
    public static zzfc<Boolean> zzbb;
    public static zzfc<Boolean> zzbc;
    public static zzfc<Boolean> zzbd;
    public static zzfc<Boolean> zzbe;
    public static zzfc<Boolean> zzbf;
    public static zzfc<Boolean> zzbg;
    public static zzfc<Boolean> zzbh;
    public static zzfc<Boolean> zzbi;
    public static zzfc<Boolean> zzbj;
    public static zzfc<Boolean> zzbk;
    public static zzfc<Boolean> zzbl;
    public static zzfc<Boolean> zzbm;
    public static zzfc<Boolean> zzbn;
    public static zzfc<Boolean> zzbo;
    public static zzfc<Boolean> zzbp;
    public static zzfc<Boolean> zzbq;
    public static zzfc<Boolean> zzbr;
    public static zzfc<Boolean> zzbs;
    public static zzfc<Boolean> zzbt;
    public static zzfc<Boolean> zzbu;
    public static zzfc<Boolean> zzbv;
    public static zzfc<Boolean> zzbw;
    public static zzfc<Boolean> zzbx;
    public static zzfc<Boolean> zzby;
    public static zzfc<Boolean> zzbz;
    public static zzfc<Long> zzc;
    public static zzfc<Boolean> zzca;
    public static zzfc<Boolean> zzcb;
    public static zzfc<Boolean> zzcc;
    public static zzfc<Boolean> zzcd;
    public static zzfc<Boolean> zzce;
    public static zzfc<Boolean> zzcf;
    public static zzfc<Boolean> zzcg;
    public static zzfc<Boolean> zzch;
    public static zzfc<Boolean> zzci;
    public static zzfc<Boolean> zzcj;
    public static zzfc<Boolean> zzck;
    public static zzfc<Boolean> zzcl;
    public static zzfc<Boolean> zzcm;
    public static zzfc<Boolean> zzcn;
    public static zzfc<Boolean> zzco;
    public static zzfc<Boolean> zzcp;
    public static zzfc<Boolean> zzcq;
    public static zzfc<Boolean> zzcr;
    public static zzfc<Boolean> zzcs;
    public static zzfc<Boolean> zzct;
    public static zzfc<Boolean> zzcu;
    public static zzfc<Boolean> zzcv;
    public static zzfc<Boolean> zzcw;
    public static zzfc<Boolean> zzcx;
    public static zzfc<Boolean> zzcy;
    public static zzfc<Boolean> zzcz;
    public static zzfc<String> zzd;
    public static zzfc<Boolean> zzda;
    public static zzfc<Boolean> zzdb;
    public static zzfc<Boolean> zzdc;
    public static zzfc<Boolean> zzdd;
    public static zzfc<Boolean> zzde;
    public static zzfc<Boolean> zzdf;
    public static zzfc<Boolean> zzdg;
    public static zzfc<Boolean> zzdh;
    /* access modifiers changed from: private */
    public static List<zzfc<?>> zzdi = Collections.synchronizedList(new ArrayList());
    private static Set<zzfc<?>> zzdj = Collections.synchronizedSet(new HashSet());
    private static zzfc<Boolean> zzdk;
    private static zzfc<Boolean> zzdl;
    private static zzfc<Boolean> zzdm;
    public static zzfc<String> zze;
    public static zzfc<Integer> zzf;
    public static zzfc<Integer> zzg;
    public static zzfc<Integer> zzh;
    public static zzfc<Integer> zzi;
    public static zzfc<Integer> zzj;
    public static zzfc<Integer> zzk;
    public static zzfc<Integer> zzl;
    public static zzfc<Integer> zzm;
    public static zzfc<Integer> zzn;
    public static zzfc<Integer> zzo;
    public static zzfc<String> zzp;
    public static zzfc<Long> zzq;
    public static zzfc<Long> zzr;
    public static zzfc<Long> zzs;
    public static zzfc<Long> zzt;
    public static zzfc<Long> zzu;
    public static zzfc<Long> zzv;
    public static zzfc<Long> zzw;
    public static zzfc<Long> zzx;
    public static zzfc<Long> zzy;
    public static zzfc<Long> zzz;

    public static Map<String, String> zza(Context context) {
        zzbx zza2 = zzbx.zza(context.getContentResolver(), zzcm.zza("com.google.android.gms.measurement"));
        return zza2 == null ? Collections.emptyMap() : zza2.zza();
    }

    private static <V> zzfc<V> zza(String str, V v, V v2, zzfa<V> zzfa) {
        zzfc zzfc = new zzfc(str, v, v2, zzfa);
        zzdi.add(zzfc);
        return zzfc;
    }

    static final /* synthetic */ Long zzde() {
        if (zzez.zza != null) {
            zzw zzw2 = zzez.zza;
        }
        return Long.valueOf(zzji.zzc());
    }

    static {
        Long valueOf = Long.valueOf(10000);
        zza = zza("measurement.ad_id_cache_time", valueOf, valueOf, zzas.zza);
        Long valueOf2 = Long.valueOf(86400000);
        zzb = zza("measurement.monitoring.sample_period_millis", valueOf2, valueOf2, zzar.zza);
        Long valueOf3 = Long.valueOf(3600000);
        zzc = zza("measurement.config.cache_time", valueOf2, valueOf3, zzbn.zza);
        String str = "https";
        zzd = zza("measurement.config.url_scheme", str, str, zzca.zza);
        String str2 = "app-measurement.com";
        zze = zza("measurement.config.url_authority", str2, str2, zzcj.zza);
        Integer valueOf4 = Integer.valueOf(100);
        zzf = zza("measurement.upload.max_bundles", valueOf4, valueOf4, zzcw.zza);
        Integer valueOf5 = Integer.valueOf(65536);
        zzg = zza("measurement.upload.max_batch_size", valueOf5, valueOf5, zzdf.zza);
        zzh = zza("measurement.upload.max_bundle_size", valueOf5, valueOf5, zzds.zza);
        Integer valueOf6 = Integer.valueOf(1000);
        zzi = zza("measurement.upload.max_events_per_bundle", valueOf6, valueOf6, zzeb.zza);
        Integer valueOf7 = Integer.valueOf(100000);
        zzj = zza("measurement.upload.max_events_per_day", valueOf7, valueOf7, zzeo.zza);
        zzk = zza("measurement.upload.max_error_events_per_day", valueOf6, valueOf6, zzau.zza);
        Integer valueOf8 = Integer.valueOf(50000);
        zzl = zza("measurement.upload.max_public_events_per_day", valueOf8, valueOf8, zzbd.zza);
        Integer valueOf9 = Integer.valueOf(AsyncHttpClient.DEFAULT_SOCKET_TIMEOUT);
        zzm = zza("measurement.upload.max_conversions_per_day", valueOf9, valueOf9, zzbf.zza);
        Integer valueOf10 = Integer.valueOf(10);
        zzn = zza("measurement.upload.max_realtime_events_per_day", valueOf10, valueOf10, zzbi.zza);
        Integer valueOf11 = Integer.valueOf(100000);
        zzo = zza("measurement.store.max_stored_events_per_app", valueOf11, valueOf11, zzbh.zza);
        String str3 = "https://app-measurement.com/a";
        zzp = zza("measurement.upload.url", str3, str3, zzbk.zza);
        Long valueOf12 = Long.valueOf(43200000);
        zzq = zza("measurement.upload.backoff_period", valueOf12, valueOf12, zzbj.zza);
        zzr = zza("measurement.upload.window_interval", valueOf3, valueOf3, zzbm.zza);
        zzs = zza("measurement.upload.interval", valueOf3, valueOf3, zzbl.zza);
        zzt = zza("measurement.upload.realtime_upload_interval", valueOf, valueOf, zzbo.zza);
        Long valueOf13 = Long.valueOf(1000);
        zzu = zza("measurement.upload.debug_upload_interval", valueOf13, valueOf13, zzbq.zza);
        Long valueOf14 = Long.valueOf(500);
        zzv = zza("measurement.upload.minimum_delay", valueOf14, valueOf14, zzbp.zza);
        Long valueOf15 = Long.valueOf(60000);
        zzw = zza("measurement.alarm_manager.minimum_interval", valueOf15, valueOf15, zzbs.zza);
        zzx = zza("measurement.upload.stale_data_deletion_interval", valueOf2, valueOf2, zzbr.zza);
        Long valueOf16 = Long.valueOf(604800000);
        zzy = zza("measurement.upload.refresh_blacklisted_config_interval", valueOf16, valueOf16, zzbu.zza);
        Long valueOf17 = Long.valueOf(15000);
        zzz = zza("measurement.upload.initial_upload_delay_time", valueOf17, valueOf17, zzbt.zza);
        Long valueOf18 = Long.valueOf(1800000);
        zzaa = zza("measurement.upload.retry_time", valueOf18, valueOf18, zzbw.zza);
        Integer valueOf19 = Integer.valueOf(6);
        zzab = zza("measurement.upload.retry_count", valueOf19, valueOf19, zzbv.zza);
        Long valueOf20 = Long.valueOf(2419200000L);
        zzac = zza("measurement.upload.max_queue_time", valueOf20, valueOf20, zzby.zza);
        Integer valueOf21 = Integer.valueOf(4);
        zzad = zza("measurement.lifetimevalue.max_currency_tracked", valueOf21, valueOf21, zzbx.zza);
        Integer valueOf22 = Integer.valueOf(200);
        zzae = zza("measurement.audience.filter_result_max_count", valueOf22, valueOf22, zzbz.zza);
        Integer valueOf23 = Integer.valueOf(25);
        zzaf = zza("measurement.upload.max_public_user_properties", valueOf23, valueOf23, null);
        Integer valueOf24 = Integer.valueOf(HttpStatus.SC_INTERNAL_SERVER_ERROR);
        zzag = zza("measurement.upload.max_event_name_cardinality", valueOf24, valueOf24, null);
        Integer valueOf25 = Integer.valueOf(25);
        zzah = zza("measurement.upload.max_public_event_params", valueOf25, valueOf25, null);
        Long valueOf26 = Long.valueOf(5000);
        zzai = zza("measurement.service_client.idle_disconnect_millis", valueOf26, valueOf26, zzcc.zza);
        Boolean valueOf27 = Boolean.valueOf(false);
        zzaj = zza("measurement.test.boolean_flag", valueOf27, valueOf27, zzcb.zza);
        String str4 = "---";
        zzak = zza("measurement.test.string_flag", str4, str4, zzce.zza);
        Long valueOf28 = Long.valueOf(-1);
        zzal = zza("measurement.test.long_flag", valueOf28, valueOf28, zzcd.zza);
        Integer valueOf29 = Integer.valueOf(-2);
        zzam = zza("measurement.test.int_flag", valueOf29, valueOf29, zzcg.zza);
        Double valueOf30 = Double.valueOf(-3.0d);
        zzan = zza("measurement.test.double_flag", valueOf30, valueOf30, zzcf.zza);
        Integer valueOf31 = Integer.valueOf(50);
        zzao = zza("measurement.experiment.max_ids", valueOf31, valueOf31, zzci.zza);
        Boolean valueOf32 = Boolean.valueOf(true);
        Integer valueOf33 = Integer.valueOf(1);
        zzap = zza("measurement.max_bundles_per_iteration", valueOf33, valueOf33, zzch.zza);
        zzaq = zza("measurement.validation.internal_limits_internal_event_params", valueOf27, valueOf27, zzck.zza);
        zzar = zza("measurement.referrer.enable_logging_install_referrer_cmp_from_apk", valueOf32, valueOf32, zzcm.zza);
        zzas = zza("measurement.client.sessions.session_id_enabled", valueOf32, valueOf32, zzcl.zza);
        zzat = zza("measurement.service.sessions.session_number_enabled", valueOf32, valueOf32, zzco.zza);
        zzau = zza("measurement.client.sessions.background_sessions_enabled", valueOf32, valueOf32, zzcn.zza);
        zzav = zza("measurement.client.sessions.remove_expired_session_properties_enabled", valueOf32, valueOf32, zzcq.zza);
        zzaw = zza("measurement.service.sessions.session_number_backfill_enabled", valueOf32, valueOf32, zzcp.zza);
        zzax = zza("measurement.service.sessions.remove_disabled_session_number", valueOf32, valueOf32, zzcs.zza);
        zzay = zza("measurement.client.sessions.start_session_before_view_screen", valueOf32, valueOf32, zzcr.zza);
        zzaz = zza("measurement.client.sessions.check_on_startup", valueOf32, valueOf32, zzcu.zza);
        zzba = zza("measurement.collection.firebase_global_collection_flag_enabled", valueOf32, valueOf32, zzct.zza);
        zzbb = zza("measurement.collection.efficient_engagement_reporting_enabled_2", valueOf27, valueOf27, zzcv.zza);
        zzbc = zza("measurement.collection.redundant_engagement_removal_enabled", valueOf27, valueOf27, zzcy.zza);
        zzbd = zza("measurement.personalized_ads_signals_collection_enabled", valueOf32, valueOf32, zzcx.zza);
        zzbe = zza("measurement.personalized_ads_property_translation_enabled", valueOf32, valueOf32, zzda.zza);
        zzbf = zza("measurement.experiment.enable_experiment_reporting", valueOf32, valueOf32, zzcz.zza);
        zzbg = zza("measurement.collection.log_event_and_bundle_v2", valueOf32, valueOf32, zzdc.zza);
        zzbh = zza("measurement.quality.checksum", valueOf27, valueOf27, null);
        zzdk = zza("measurement.module.collection.conditionally_omit_admob_app_id", valueOf32, valueOf32, zzdb.zza);
        zzbi = zza("measurement.sdk.dynamite.use_dynamite3", valueOf27, valueOf27, zzde.zza);
        zzbj = zza("measurement.sdk.dynamite.allow_remote_dynamite", valueOf27, valueOf27, zzdd.zza);
        zzbk = zza("measurement.sdk.collection.validate_param_names_alphabetical", valueOf32, valueOf32, zzdg.zza);
        zzbl = zza("measurement.collection.event_safelist", valueOf32, valueOf32, zzdi.zza);
        zzbm = zza("measurement.service.audience.scoped_filters_v27", valueOf32, valueOf32, zzdh.zza);
        zzbn = zza("measurement.service.audience.session_scoped_event_aggregates", valueOf32, valueOf32, zzdk.zza);
        zzbo = zza("measurement.service.audience.session_scoped_user_engagement", valueOf32, valueOf32, zzdj.zza);
        zzbp = zza("measurement.service.audience.scoped_engagement_removal_when_session_expired", valueOf32, valueOf32, zzdm.zza);
        zzbq = zza("measurement.client.audience.scoped_engagement_removal_when_session_expired", valueOf32, valueOf32, zzdl.zza);
        zzbr = zza("measurement.service.audience.remove_disabled_session_scoped_user_engagement", valueOf27, valueOf27, zzdo.zza);
        zzbs = zza("measurement.service.audience.use_bundle_timestamp_for_property_filters", valueOf32, valueOf32, zzdn.zza);
        zzbt = zza("measurement.service.audience.fix_prepending_previous_sequence_timestamp", valueOf32, valueOf32, zzdq.zza);
        zzdl = zza("measurement.service.audience.invalidate_config_cache_after_app_unisntall", valueOf32, valueOf32, zzdp.zza);
        zzbu = zza("measurement.service.audience.fix_skip_audience_with_failed_filters", valueOf32, valueOf32, zzdr.zza);
        zzbv = zza("measurement.audience.use_bundle_end_timestamp_for_non_sequence_property_filters", valueOf27, valueOf27, zzdu.zza);
        zzbw = zza("measurement.audience.refresh_event_count_filters_timestamp", valueOf27, valueOf27, zzdt.zza);
        zzbx = zza("measurement.audience.use_bundle_timestamp_for_event_count_filters", valueOf27, valueOf27, zzdw.zza);
        zzby = zza("measurement.sdk.collection.retrieve_deeplink_from_bow_2", valueOf32, valueOf32, zzdv.zza);
        zzbz = zza("measurement.app_launch.event_ordering_fix", valueOf32, valueOf32, zzdy.zza);
        zzca = zza("measurement.sdk.collection.last_deep_link_referrer2", valueOf32, valueOf32, zzdx.zza);
        zzcb = zza("measurement.sdk.collection.last_deep_link_referrer_campaign2", valueOf27, valueOf27, zzea.zza);
        zzcc = zza("measurement.sdk.collection.last_gclid_from_referrer2", valueOf27, valueOf27, zzdz.zza);
        zzcd = zza("measurement.sdk.collection.worker_thread_referrer", valueOf32, valueOf32, zzec.zza);
        zzce = zza("measurement.sdk.collection.enable_extend_user_property_size", valueOf32, valueOf32, zzee.zza);
        zzcf = zza("measurement.upload.file_lock_state_check", valueOf27, valueOf27, zzed.zza);
        zzcg = zza("measurement.sampling.calculate_bundle_timestamp_before_sampling", valueOf32, valueOf32, zzeg.zza);
        zzch = zza("measurement.ga.ga_app_id", valueOf27, valueOf27, zzef.zza);
        zzci = zza("measurement.lifecycle.app_backgrounded_tracking", valueOf32, valueOf32, zzei.zza);
        zzcj = zza("measurement.lifecycle.app_in_background_parameter", valueOf27, valueOf27, zzeh.zza);
        zzck = zza("measurement.integration.disable_firebase_instance_id", valueOf27, valueOf27, zzek.zza);
        zzcl = zza("measurement.lifecycle.app_backgrounded_engagement", valueOf27, valueOf27, zzej.zza);
        zzcm = zza("measurement.service.fix_gmp_version", valueOf32, valueOf32, zzem.zza);
        zzcn = zza("measurement.collection.service.update_with_analytics_fix", valueOf27, valueOf27, zzel.zza);
        zzco = zza("measurement.service.disable_install_state_reporting", valueOf32, valueOf32, zzen.zza);
        zzcp = zza("measurement.service.use_appinfo_modified", valueOf27, valueOf27, zzeq.zza);
        zzcq = zza("measurement.client.firebase_feature_rollout.v1.enable", valueOf32, valueOf32, zzep.zza);
        zzcr = zza("measurement.client.sessions.check_on_reset_and_enable", valueOf27, valueOf27, zzes.zza);
        zzcs = zza("measurement.config.string.always_update_disk_on_set", valueOf32, valueOf32, zzer.zza);
        zzct = zza("measurement.scheduler.task_thread.cleanup_on_exit", valueOf27, valueOf27, zzeu.zza);
        zzcu = zza("measurement.upload.file_truncate_fix", valueOf27, valueOf27, zzet.zza);
        zzcv = zza("measurement.engagement_time_main_thread", valueOf32, valueOf32, zzew.zza);
        zzcw = zza("measurement.sdk.referrer.delayed_install_referrer_api", valueOf27, valueOf27, zzev.zza);
        zzcx = zza("measurement.logging.improved_messaging_q4_2019_client", valueOf32, valueOf32, zzey.zza);
        zzcy = zza("measurement.logging.improved_messaging_q4_2019_service", valueOf32, valueOf32, zzat.zza);
        zzcz = zza("measurement.gold.enhanced_ecommerce.format_logs", valueOf27, valueOf27, zzaw.zza);
        zzda = zza("measurement.gold.enhanced_ecommerce.nested_param_daily_event_count", valueOf27, valueOf27, zzav.zza);
        zzdb = zza("measurement.gold.enhanced_ecommerce.upload_nested_complex_events", valueOf27, valueOf27, zzay.zza);
        zzdc = zza("measurement.gold.enhanced_ecommerce.log_nested_complex_events", valueOf27, valueOf27, zzax.zza);
        zzdd = zza("measurement.gold.enhanced_ecommerce.updated_schema.client", valueOf27, valueOf27, zzba.zza);
        zzde = zza("measurement.gold.enhanced_ecommerce.updated_schema.service", valueOf27, valueOf27, zzaz.zza);
        zzdm = zza("measurement.collection.synthetic_data_mitigation", valueOf27, valueOf27, zzbc.zza);
        zzdf = zza("measurement.service.configurable_service_limits", valueOf27, valueOf27, zzbb.zza);
        zzdg = zza("measurement.client.configurable_service_limits", valueOf27, valueOf27, zzbe.zza);
        zzdh = zza("measurement.androidId.delete_feature", valueOf32, valueOf32, zzbg.zza);
    }
}
